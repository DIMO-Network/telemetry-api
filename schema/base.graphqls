"""
A point in time, encoded per RFC-3999. Typically these will be in second precision,
just like the blockchain, and in UTC.
"""
scalar Time

directive @goField(
  forceResolver: Boolean
  name: String
  omittable: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
directive @isSignal on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
directive @hasAggregation on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
"""
The root query type for the GraphQL schema.
"""
type Query {
  """
  signals returns a collection of signals for a given token in a given time range.
  """
  signals(
    tokenId: Int!
    """
    interval is a time span that used for aggregatting the data with.
    A duration string is a sequence of decimal numbers, each with optional fraction and a unit suffix,
    such as "300ms" or "2h45m". Valid time units are "ms", "s", "m", "h"
    """
    interval: String!
    from: Time!
    to: Time!
    filter: SignalFilter
  ): [SignalAggregations!] @requiresVehicleToken
  """
  SignalsLatest returns the latest signals for a given token.
  """
  signalsLatest(tokenId: Int!, filter: SignalFilter): SignalCollection
    @requiresVehicleToken
  """
  availableSignals returns a list of queryable signal names that have stored data for a given tokenId.
  """
  availableSignals(tokenId: Int!, filter: SignalFilter): [String!]
    @requiresVehicleToken
}
type SignalAggregations {
  """
  Timestamp of the aggregated data.
  """
  timestamp: Time!
  """
  Approximate Latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
  Unit: 'degrees' Min: '-90' Max: '90'
  Required Privileges: [VEHICLE_APPROXIMATE_LOCATION OR VEHICLE_ALL_TIME_LOCATION]
  """
  currentLocationApproximateLatitude(agg: FloatAggregation!): Float
    @requiresOneOfPrivilege(
      privileges: [VEHICLE_APPROXIMATE_LOCATION, VEHICLE_ALL_TIME_LOCATION]
    )
    @goField(name: "CurrentLocationApproximateLatitude", forceResolver: true)
    @isSignal
    @hasAggregation

  """
  Approximate Longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
  Unit: 'degrees' Min: '-180' Max: '180'
  Required Privileges: [VEHICLE_APPROXIMATE_LOCATION OR VEHICLE_ALL_TIME_LOCATION]
  """
  currentLocationApproximateLongitude(agg: FloatAggregation!): Float
    @requiresOneOfPrivilege(
      privileges: [VEHICLE_APPROXIMATE_LOCATION, VEHICLE_ALL_TIME_LOCATION]
    )
    @goField(name: "CurrentLocationApproximateLongitude", forceResolver: true)
    @isSignal
    @hasAggregation
}

type SignalCollection {
  """
  The last time any signal was seen matching the filter.
  """
  lastSeen: Time
  """
  Approximate Latitude of vehicle in WGS 84 geodetic coordinates.
  This returned location is the center of the h3 cell with resolution 6 that the location is in.
  More Info on H3: https://h3geo.org/
  Unit: 'degrees' Min: '-90' Max: '90'
  Required Privileges: [VEHICLE_APPROXIMATE_LOCATION OR VEHICLE_ALL_TIME_LOCATION]
  """
  currentLocationApproximateLatitude: SignalFloat
    @requiresOneOfPrivilege(
      privileges: [VEHICLE_APPROXIMATE_LOCATION, VEHICLE_ALL_TIME_LOCATION]
    )
    @goField(name: "CurrentLocationApproximateLatitude")
    @isSignal

  """
  Approximate Longitude of vehicle in WGS 84 geodetic coordinates.
  This returned location is the center of the h3 cell with resolution 6 that the location is in.
  More Info on H3: https://h3geo.org/
  Unit: 'degrees' Min: '-180' Max: '180'
  Required Privileges: [VEHICLE_APPROXIMATE_LOCATION OR VEHICLE_ALL_TIME_LOCATION]
  """
  currentLocationApproximateLongitude: SignalFloat
    @requiresOneOfPrivilege(
      privileges: [VEHICLE_APPROXIMATE_LOCATION, VEHICLE_ALL_TIME_LOCATION]
    )
    @goField(name: "CurrentLocationApproximateLongitude")
    @isSignal
}

enum FloatAggregation {
  AVG
  MED
  MAX
  MIN
  RAND
  FIRST
  LAST
}

enum StringAggregation {
  """
  Randomly select a value from the group.
  """
  RAND
  """
  Select the most frequently occurring value in the group.
  """
  TOP
  """
  Return a list of unique values in the group.
  """
  UNIQUE
  """
  Return value in group associated with the minimum time value.
  """
  FIRST
  """
  Return value in group associated with the maximum time value.
  """
  LAST
}
type SignalFloat {
  """
  timestamp of when this data was colllected
  """
  timestamp: Time!

  """
  value of the signal
  """
  value: Float!
}

type SignalString {
  """
  timestamp of when this data was colllected
  """
  timestamp: Time!

  """
  value of the signal
  """
  value: String!
}

"""
SignalFilter holds the filter parameters for the signal querys.
"""
input SignalFilter {
  """
  Filter signals by source type.
  available sources are: "autopi", "macaron", "ruptela", "smartcar", "tesla"
  """
  source: String
}
