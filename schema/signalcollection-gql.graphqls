# Code generated by "model-garage" DO NOT EDIT.
extend type SignalCollection {
  """
  ID for the vehicles definition
  Required Privlieges: [VehicleNonLocationData]
  """
  definitionID(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  where the data was sourced from
  Required Privlieges: [VehicleNonLocationData]
  """
  source(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  subjet of this vehicle data
  Required Privlieges: [VehicleNonLocationData]
  """
  subject(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  timestamp of when this data was colllected
  Required Privlieges: [VehicleNonLocationData]
  """
  timestamp(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  type of data collected
  Required Privlieges: [VehicleNonLocationData]
  """
  type(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Tire pressure in kilo-Pascal.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleChassisAxleRow1WheelLeftTirePressure(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Tire pressure in kilo-Pascal.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleChassisAxleRow1WheelRightTirePressure(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Tire pressure in kilo-Pascal.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleChassisAxleRow2WheelLeftTirePressure(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Tire pressure in kilo-Pascal.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleChassisAxleRow2WheelRightTirePressure(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Current altitude relative to WGS 84 reference ellipsoid, as measured at the position of GNSS receiver antenna.
  Required Privlieges: [VehicleAllTimeLocation]
  """
  vehicleCurrentLocationAltitude(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleAllTimeLocation])

  """
  Current latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
  Required Privlieges: [VehicleAllTimeLocation]
  """
  vehicleCurrentLocationLatitude(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleAllTimeLocation])

  """
  Current longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.
  Required Privlieges: [VehicleAllTimeLocation]
  """
  vehicleCurrentLocationLongitude(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleAllTimeLocation])

  """
  Timestamp from GNSS system for current location, formatted according to ISO 8601 with UTC time zone.
  Required Privlieges: [VehicleAllTimeLocation]
  """
  vehicleCurrentLocationTimestamp(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleAllTimeLocation])

  """
  Air temperature outside the vehicle.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleExteriorAirTemperature(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Current Voltage of the low voltage battery.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleLowVoltageBatteryCurrentVoltage(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  PID 33 - Barometric pressure
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleOBDBarometricPressure(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  PID 04 - Engine load in percent - 0 = no load, 100 = full load
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleOBDEngineLoad(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  PID 0F - Intake temperature
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleOBDIntakeTemp(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  PID 1F - Engine run time
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleOBDRunTime(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Engine coolant temperature.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainCombustionEngineECT(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Engine oil level.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainCombustionEngineEngineOilLevel(
    agg: StringAggregation
  ): [SignalString!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Engine speed measured as rotations per minute.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainCombustionEngineSpeed(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Current throttle position.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainCombustionEngineTPS(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Current available fuel in the fuel tank expressed in liters.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainFuelSystemAbsoluteLevel(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  High level information of fuel types supported
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainFuelSystemSupportedFuelTypes(
    agg: StringAggregation
  ): [SignalString!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Remaining range in meters using all energy sources available in the vehicle.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainRange(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Target charge limit (state of charge) for battery.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainTractionBatteryChargingChargeLimit(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  True if charging is ongoing. Charging is considered to be ongoing if energy is flowing from charger to vehicle.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainTractionBatteryChargingIsCharging(
    agg: StringAggregation
  ): [SignalString!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Gross capacity of the battery.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainTractionBatteryGrossCapacity(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Physical state of charge of the high voltage battery, relative to net capacity. This is not necessarily the state of charge being displayed to the customer.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainTractionBatteryStateOfChargeCurrent(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Odometer reading, total distance travelled during the lifetime of the transmission.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainTransmissionTravelledDistance(
    agg: FloatAggregation
  ): [SignalFloat!] @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Defines the powertrain type of the vehicle.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehiclePowertrainType(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Vehicle speed.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleSpeed(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Vehicle brand or manufacturer.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleVehicleIdentificationBrand(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Vehicle model.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleVehicleIdentificationModel(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  Model year of the vehicle.
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleVehicleIdentificationYear(agg: FloatAggregation): [SignalFloat!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])

  """
  unque DIMO ID for the vehicle
  Required Privlieges: [VehicleNonLocationData]
  """
  vehicleID(agg: StringAggregation): [SignalString!]
    @requiresPrivilege(privileges: [VehicleNonLocationData])
}

type SignalFloat {
  """
  timestamp of when this data was colllected
  """
  timestamp: Time

  """
  value of the signal
  """
  value: Float
}

type SignalString {
  """
  timestamp of when this data was colllected
  """
  timestamp: Time

  """
  value of the signal
  """
  value: String
}
