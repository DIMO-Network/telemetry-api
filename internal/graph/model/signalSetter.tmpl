// Code generated by "model-garage" DO NOT EDIT.
package model

// SetCollectionField find the matching field based on the signal name and set the value based on the signal value.
func SetCollectionField(collection *SignalCollection, signal *vss.Signal) {
    if collection == nil || signal == nil {
        return
    }
    switch signal.Name {
{{- range .Signals }}
    case "{{ .JSONName }}":
        {{- if eq .GQLType "Float" }}
        collection.{{ .GOName }} = &SignalFloat{
            Timestamp: signal.Timestamp,
            Value: signal.ValueNumber,
        }
        {{- else }}
        collection.{{ .GOName }} = &SignalString{
            Timestamp: signal.Timestamp,
            Value: signal.ValueString,
        }
        {{- end }}
{{- end }}
    }
}
// SetAggregationField find the matching field based on the signal name and set the value based on the signal value.
func SetAggregationField(aggregations *SignalAggregations, signal *AggSignal) {
    if aggregations == nil || signal == nil {
        return
    }
    switch signal.Name {
{{- range .Signals }}
    case "{{ .JSONName }}":
        {{- if eq .GQLType "Float" }}
        aggregations.NumberValues[AliasKey{Name: signal.Name, Agg: signal.Agg}] = signal.ValueNumber
        {{- else }}
        aggregations.StringValues[AliasKey{Name: signal.Name, Agg: signal.Agg}] = signal.ValueString
        {{- end }}
{{- end }}
    }
}