package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"time"

	"github.com/DIMO-Network/telemetry-api/internal/graph/model"
	"github.com/vektah/gqlparser/v2/gqlerror"
)

// Signals is the resolver for the Signals field.
func (r *queryResolver) Signals(ctx context.Context, tokenID *int, from *time.Time, to *time.Time) (*model.SignalCollection, error) {
	if tokenID == nil {
		return nil, gqlerror.Errorf("tokenID is required")
	}
	return &model.SignalCollection{TokenID: uint32(*tokenID)}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// SignalCollection returns SignalCollectionResolver implementation.
func (r *Resolver) SignalCollection() SignalCollectionResolver { return &signalCollectionResolver{r} }

type queryResolver struct{ *Resolver }
type signalCollectionResolver struct{ *Resolver }
